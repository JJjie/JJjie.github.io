{"title":"nc命令详解","date":"2015-10-18T13:00:00.000Z","slug":"nc_introduce","tags":["Programing"],"categories":["Learning"],"updated":"2019-04-03T13:41:26.266Z","content":"<h1 id=\"NetCat\">NetCat<a href=\"post/nc_introduce#NetCat\"></a></h1><h3 id=\"概述\">概述<a href=\"post/nc_introduce#概述\"></a></h3><p>NetCat，在网络工具中有“瑞士军刀”美誉，其有Windows和Linux的版本。因为它短小精悍（1.84版本也不过25k，旧版本或缩减版甚至更小）、功能实用，被设计为一个简单、可靠的网络工具，可通过TCP或UDP协议传输读写数据。同时，它还是一个网络应用Debug分析器，因为它可以根据需要创建各种不同类型的网络连接。</p>\n<h3 id=\"常见使用\">常见使用<a href=\"post/nc_introduce#常见使用\"></a></h3><h4 id=\"1、远程拷贝文件\">1、远程拷贝文件<a href=\"post/nc_introduce#1、远程拷贝文件\"></a></h4><p>从server1拷贝文件到server2上。需要先在server2上，用nc激活监听，server2上运行：</p>\n<p>引用</p>\n<pre><code>[root@hatest2 tmp]# nc -lp 1234 &gt; install.log\n</code></pre><p>server1上运行：</p>\n<p>引用</p>\n<pre><code>[root@hatest1 ~]# ll install.log\n-rw-r--r--   1 root root 39693 12月 20   2007 install.log\n[root@hatest1 ~]# nc -w 1 192.168.228.222 1234 &lt; install.log\n</code></pre><h4 id=\"2、克隆硬盘或分区\">2、克隆硬盘或分区<a href=\"post/nc_introduce#2、克隆硬盘或分区\"></a></h4><p>操作与上面的拷贝是雷同的，只需要由dd获得硬盘或分区的数据，然后传输即可。<br>克隆硬盘或分区的操作，不应在已经mount的的系统上进行。所以，需要使用安装光盘引导后，进入拯救模式（或使用Knoppix工具光盘）启动系统后，在server2上进行类似的监听动作：</p>\n<pre><code># nc -l -p 1234 | dd of=/dev/sda\n</code></pre><p>server1上执行传输，即可完成从server1克隆sda硬盘到server2的任务：</p>\n<pre><code># dd if=/dev/sda | nc 192.168.228.222 1234\n</code></pre><h4 id=\"3、端口扫描\">3、端口扫描<a href=\"post/nc_introduce#3、端口扫描\"></a></h4><p>可以执行：</p>\n<pre><code># nc -v -w 1 192.168.228.222 -z 1-1000\nhatest2 [192.168.228.222] 22 (ssh) open\n</code></pre><h4 id=\"4、保存Web页面\">4、保存Web页面<a href=\"post/nc_introduce#4、保存Web页面\"></a></h4><pre><code># while true；\n# do nc -l -p 80 -q 1 &lt; somepage.html; done\n</code></pre><h4 id=\"5、模拟HTTP-Headers\">5、模拟HTTP Headers<a href=\"post/nc_introduce#5、模拟HTTP-Headers\"></a></h4><pre><code>[root@hatest1 ~]# nc www.linuxfly.org 80\nGET / HTTP/1.1\nHost: ispconfig.org\nReferrer: mypage.com\nUser-Agent: my-browser\n</code></pre><p>两次回车，可从对方获得HTTP Headers内容</p>\n<pre><code>HTTP/1.1 200 OK\nDate: Tue, 16 Dec 2008 07:23:24 GMT\nServer: Apache/2.2.6 (Unix) DAV/2 mod_mono/1.2.1 mod_python/3.2.8 Python/2.4.3 mod_perl/2.0.2 Perl/v5.8.8\nSet-Cookie: PHPSESSID=bbadorbvie1gn037iih6lrdg50; path=/\nExpires: 0\nCache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0\nPragma: no-cache\nCache-Control: private, post-check=0, pre-check=0, max-age=0\nSet-Cookie: oWn_sid=xRutAY; expires=Tue, 23-Dec-2008 07:23:24 GMT; path=/\nVary: Accept-Encoding\nTransfer-Encoding: chunked\nContent-Type: text/html\n[......]\n</code></pre><h4 id=\"6、聊天\">6、聊天<a href=\"post/nc_introduce#6、聊天\"></a></h4><p>nc还可以作为简单的字符下聊天工具使用，同样的，server2上需要启动监听：</p>\n<pre><code>[root@hatest2 tmp]# nc -lp 1234\n</code></pre><p>server1上传输：</p>\n<pre><code>[root@hatest1 ~]# nc 192.168.228.222 1234\n</code></pre><p>这样，双方就可以相互交流了。使用Ctrl+D正常退出。</p>\n<h4 id=\"7、传输目录\">7、传输目录<a href=\"post/nc_introduce#7、传输目录\"></a></h4><p>从server1拷贝nginx-0.6.34目录内容到server2上。需要先在server2上，用nc激活监听，server2上运行：</p>\n<pre><code>[root@hatest2 tmp]# nc -l 1234 |tar xzvf -\n</code></pre><p>server1上运行：</p>\n<pre><code>[root@hatest1 ~]# ll -d nginx-0.6.34\ndrwxr-xr-x 8 1000 1000 4096 12-23 17:25 nginx-0.6.34\n[root@hatest1 ~]# tar czvf - nginx-0.6.34|nc 192.168.228.222 1234\n</code></pre><h3 id=\"参数简介\">参数简介<a href=\"post/nc_introduce#参数简介\"></a></h3><p>具体参照 <code>man nc</code> 中的说明<br>不同版本差异较大</p>\n","prev":{"title":"netstat 命令详解","slug":"netstat_introduce"},"next":{"title":"JavaScript跨域总结与解决办法","slug":"javascript_cross-domain"},"link":"https://jjjie.github.io/post/nc_introduce/","toc":[{"title":"NetCat","id":"NetCat","index":"1"}],"copyright":{"author":"Wenjie Hu","link":"<a href=\"https://jjjie.github.io/post/nc_introduce/\" title=\"nc命令详解\">https://jjjie.github.io/post/nc_introduce/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}